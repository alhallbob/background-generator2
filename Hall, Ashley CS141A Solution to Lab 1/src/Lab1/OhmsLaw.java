
package Lab1; 
import java.text.DecimalFormat;
import javax.swing.JFrame;


/**<pre>
 * File         OhmsLaw.java
 * Description  Create a Java GUI application using NetBeans that provides the 
 * user usage of Ohmâ€™s Law formula. In electrical circuits, Ohm's law states 
 * that the current through a conductor between two points is directly 
 * proportional to the potential difference or voltage across the two points, 
 * and inversely proportional to the resistance between them, provided that the 
 * temperature remains constant. The mathematical equation that describes this 
 * relationship is: I = V/R, R = V/I, V = I*R where V is the potential 
 * difference measured across the resistance in units of volts; I is the current 
 * through the resistance in units of amperes and R is the resistance of the 
 * conductor in units of ohms. More specifically, Ohm's law states that the R in 
 * this relation is constant, independent of the current.
 * 
 *Platform              NetBeans IDE 8.2, jdk 1.8.0_191, Windows 10
 * Course               CS 141A, Winter 2019
 * Date                 1/3/2019
 * History log
 * Time of completion   2 hours 13 minutes
 * @see                 javax.swing.JFrame
 * @see                 java.text.DecimalFormat
 * @author              <i>Ashley Hall</i>
 * </pre>
 */

public class OhmsLaw extends JFrame {

    /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~---
     *<pre>*      
     * Method           OhmsLaw()     
     * Description      Initializes components,sets the calculate button as the 
     *                  default button, and centers the window.     
     * @param           method does not take arguments
     * @author          <i>Ashley Hall</i>      
     * Date             1/07/2019  
     * History Log
     *</pre>
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
    public OhmsLaw() {
        initComponents();
        this.getRootPane().setDefaultButton(calculateJButton); 
        this.setLocationRelativeTo(null); //centers window
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        titleJLabel = new javax.swing.JLabel();
        vJLabel = new javax.swing.JLabel();
        voltsJTextField = new javax.swing.JTextField();
        voltsJLabel = new javax.swing.JLabel();
        rJLabel = new javax.swing.JLabel();
        resistanceJTextField = new javax.swing.JTextField();
        resistanceJLabel = new javax.swing.JLabel();
        iJLabel3 = new javax.swing.JLabel();
        currentJTextField = new javax.swing.JTextField();
        currentJLabel = new javax.swing.JLabel();
        controlJPanel = new javax.swing.JPanel();
        calculateJButton = new javax.swing.JButton();
        clearJButton = new javax.swing.JButton();
        printJButton = new javax.swing.JButton();
        quitJButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Ohm's Law Calculator");
        setResizable(false);

        titleJLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        titleJLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titleJLabel.setText("Ohm's Law");

        vJLabel.setText("V:");

        voltsJTextField.setText("    ");
        voltsJTextField.setPreferredSize(new java.awt.Dimension(6, 20));
        voltsJTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                voltsJTextFieldActionPerformed(evt);
            }
        });

        voltsJLabel.setText("volts");

        rJLabel.setText("R:");

        resistanceJTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resistanceJTextFieldActionPerformed(evt);
            }
        });

        resistanceJLabel.setText("ohms");

        iJLabel3.setText("I:");

        currentJTextField.setEditable(false);
        currentJTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                currentJTextFieldActionPerformed(evt);
            }
        });

        currentJLabel.setText("amperes");

        controlJPanel.setLayout(new java.awt.GridLayout(2, 2, 5, 5));

        calculateJButton.setBackground(new java.awt.Color(255, 255, 204));
        calculateJButton.setMnemonic('C');
        calculateJButton.setText("Calculate");
        calculateJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calculateJButtonActionPerformed(evt);
            }
        });
        controlJPanel.add(calculateJButton);

        clearJButton.setBackground(new java.awt.Color(255, 255, 204));
        clearJButton.setMnemonic('I');
        clearJButton.setText("Clear");
        clearJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearJButtonActionPerformed(evt);
            }
        });
        controlJPanel.add(clearJButton);

        printJButton.setBackground(new java.awt.Color(255, 255, 204));
        printJButton.setMnemonic('P');
        printJButton.setText("Print");
        printJButton.setToolTipText("Print the form as GUI");
        printJButton.setEnabled(false);
        printJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printJButtonActionPerformed(evt);
            }
        });
        controlJPanel.add(printJButton);

        quitJButton.setBackground(new java.awt.Color(255, 255, 204));
        quitJButton.setMnemonic('X');
        quitJButton.setText("Quit");
        quitJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quitJButtonActionPerformed(evt);
            }
        });
        controlJPanel.add(quitJButton);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 29, Short.MAX_VALUE)
                .addComponent(controlJPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(29, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rJLabel)
                    .addComponent(vJLabel)
                    .addComponent(iJLabel3, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(currentJTextField)
                            .addComponent(resistanceJTextField))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(currentJLabel))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(24, 24, 24)
                                .addComponent(resistanceJLabel))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(voltsJTextField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(voltsJLabel)
                        .addGap(4, 4, 4)))
                .addGap(35, 35, 35))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(titleJLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(titleJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(vJLabel)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(voltsJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(voltsJLabel)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(resistanceJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rJLabel)
                    .addComponent(resistanceJLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(currentJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(iJLabel3)
                    .addComponent(currentJLabel))
                .addGap(21, 21, 21)
                .addComponent(controlJPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(16, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

   
    private void voltsJTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_voltsJTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_voltsJTextFieldActionPerformed

    private void resistanceJTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resistanceJTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_resistanceJTextFieldActionPerformed

    private void currentJTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_currentJTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_currentJTextFieldActionPerformed
    
    /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~---
     *<pre>*      
     * Method           calculateJButtonActionPerformed()     
     * Description      Calculates the current when given the voltage and 
     *                  resistance.
     * @param           arg is an ActionEvent object
     * @see             java.awt.event.ActionEvent
     * @author          <i>Ashley Hall</i>      
     * Date             1/07/2019  
     * History Log
     *</pre>
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
    private void calculateJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calculateJButtonActionPerformed

        DecimalFormat threeDecimals = new DecimalFormat("#,##0.000");
        float volts, resistance, current;
        volts = Float.parseFloat(voltsJTextField.getText());
        resistance = Float.parseFloat(resistanceJTextField.getText());
        current = volts / resistance; 
        currentJTextField.setText(threeDecimals.format(current));
        
    }//GEN-LAST:event_calculateJButtonActionPerformed

    /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~---
     *<pre>*      
     * Method           clearJButtonActionPerformed()     
     * Description      Event handler to clear the form and set the focus 
     *                  to voltsJTextField.
     * @param           arg is an ActionEvent object
     * @see             java.awt.event.ActionEvent
     * @author          <i>Ashley Hall</i>      
     * Date             1/07/2019  
     * History Log
     *</pre>
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
    private void clearJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearJButtonActionPerformed
     
        voltsJTextField.setText("");
        resistanceJTextField.setText("");
        currentJTextField.setText("");
        voltsJTextField.requestFocus(); 
    }//GEN-LAST:event_clearJButtonActionPerformed

    private void printJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printJButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_printJButtonActionPerformed

    /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~---
     *<pre>*      
     * Method           quitJButtonActionPerformed()     
     * Description      Event handler to end the application      
     * @param           arg is an ActionEvent object
     * @see             java.awt.event.ActionEvent
     * @author          <i>Ashley Hall</i>      
     * Date             1/07/2019  
     * History Log
     *</pre>
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
    private void quitJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quitJButtonActionPerformed
        System.exit(0); 
    }//GEN-LAST:event_quitJButtonActionPerformed

 
    /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~---
     *<pre>*      
     * Method           main()     
     * Description      Calls the contructor to create an instance of the form.      
     * @param           args are the command line strings
     * @see             java.awt.EventQueue
     * @author          <i>Ashley Hall</i>      
     * Date             1/07/2019  
     * History Log
     *</pre>
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(OhmsLaw.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(OhmsLaw.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(OhmsLaw.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(OhmsLaw.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new OhmsLaw().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton calculateJButton;
    private javax.swing.JButton clearJButton;
    private javax.swing.JPanel controlJPanel;
    private javax.swing.JLabel currentJLabel;
    private javax.swing.JTextField currentJTextField;
    private javax.swing.JLabel iJLabel3;
    private javax.swing.JButton printJButton;
    private javax.swing.JButton quitJButton;
    private javax.swing.JLabel rJLabel;
    private javax.swing.JLabel resistanceJLabel;
    private javax.swing.JTextField resistanceJTextField;
    private javax.swing.JLabel titleJLabel;
    private javax.swing.JLabel vJLabel;
    private javax.swing.JLabel voltsJLabel;
    private javax.swing.JTextField voltsJTextField;
    // End of variables declaration//GEN-END:variables
}
